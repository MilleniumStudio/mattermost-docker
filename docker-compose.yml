version: "3"

services:

  db:
    build: db
    read_only: true
    restart: unless-stopped
    volumes:
      - ./volumes/db/var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost
    # uncomment the following to enable backup
    #  - AWS_ACCESS_KEY_ID=XXXX
    #  - AWS_SECRET_ACCESS_KEY=XXXX
    #  - WALE_S3_PREFIX=s3://BUCKET_NAME/PATH
    #  - AWS_REGION=us-east-1
    labels:
      - "traefik.enable=false"

  app:
    build:
      context: app
      args:
        - edition=team
        - PUID=1000
        - PGID=1000
    restart: unless-stopped
    volumes:
      - ./volumes/app/mattermost/config:/mattermost/config:rw
      - ./volumes/app/mattermost/data:/mattermost/data:rw
      - ./volumes/app/mattermost/logs:/mattermost/logs:rw
      - ./volumes/app/mattermost/plugins:/mattermost/plugins:rw
      - ./volumes/app/mattermost/client-plugins:/mattermost/client/plugins:rw
      - ./volumes/app/mattermost/bleveindexes:/mattermost/bleveindexes:rw
    environment:
      # set same as db credentials and dbname
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost

      # use the credentials you've set above, in the format:
      # MM_SQLSETTINGS_DATASOURCE=postgres://${MM_USERNAME}:${MM_PASSWORD}@db:5432/${MM_DBNAME}?sslmode=disable&connect_timeout=10
      - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@db:5432/mattermost?sslmode=disable&connect_timeout=10

      # in case your config is not in default location
      #- MM_CONFIG=/mattermost/config/config.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.2https.redirectscheme.scheme=https"
      - "traefik.http.routers.mattermost.rule=Host(`mydomain.com`)"
      - "traefik.http.routers.mattermost.entrypoints=http"
      - "traefik.http.routers.mattermost.middlewares=2https"
      - "traefik.http.routers.mattermost-secured.rule=Host(`mydomain.com`)"
      - "traefik.http.routers.mattermost-secured.entrypoints=https"
      - "traefik.http.routers.mattermost-secured.tls.certresolver=le"

  traefik:
    image: traefik:2.3
    restart: unless-stopped
    command: >
      --api.insecure=true
      --providers.docker
      --entrypoints.http.address=:80
      --entrypoints.https.address=:443
      --certificatesresolvers.le.acme.httpchallenge=true
      --certificatesresolvers.le.acme.httpchallenge.entryPoint=http
      --certificatesresolvers.le.acme.email=contact@mydomain.com
      --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./volumes/web/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
